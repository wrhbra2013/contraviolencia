 TUTORIAL GIT
//Parte 1 Baixando arquivos git 

$git clone git@github.com:pasta_raiz/repositorio.git

$cd /pasta_git_clone


//Parte 2 - Atualizar pasta git 
$git init 

$git add .

$git commit -m "comentarios"

$git push origin main

TUTORIAL HEROKU

//Parte 3- Atualizar heroku git

->Importante tenha certeza que os NOVOS ARQUIVOS estarão dentro da pasta.


$git init (inializar)

$git add . (adicionar)

$git commit -m "repositio Heroku" (salvar no repositorio)


$heroku login (proceder com login)


$heroku create <nome_respositorio)  ->criar pagina web.

No respositorio criado selecionar ferramenta_de Banco_de _dados free

-> retorno Para atualizar página já publicada.

$git push heroku main ->publicar na web.


$heroku open ->visualizar pagina final.

TUTORIAL ATUALIZAÇÃO APP HEROKU  
#Atualizar app Heroku e Corrigindo erros:

1. $git add . # Sem $git init (ja iniciado anteriormente)
2. $git commit -am "heroku" (salvar no repositorio)
3. $git push heroku main ->publicar na web. #Sem $heroku login (ja iniciado na mesma sessão)

#CONFIS APP HEROKU
#Com a Pasta pronta, framework montado

1. Criar requiriments.txt: # dentro da pasta do projeto.  Requiriments.txt, conunto das bibliotecas para rodar o projeto.
$pip install pipreqs
$pipreqs </pasta/projeto>

2, Instalar dependencias do projeto:
$pip install -r requirements.txt

3. Criar procfile:
$editor procfile (sem extensão) com o conteúdo básico para inicializar app. Exemplo: python app = web: gunicorn wsgi:app   

PYTHON MODULES install
$python3 -m pip install <nome_modulo>

GERAR CERTIFICADO ROOT SSL (https-Site seguro)
1.  sudo apt install openssl ca-certificates
2.  sudo mkdir /var/www/ssl
3.  cd /var/www/ssl
4.  sudo openssl genrsa -out server.key 2048
5.  sudo chmod 600 server.key
6.  sudo openssl req -new -key server.key -out server.csr
7.  sudo openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt
8.  sudo cp -v  server.key /etc/ssl/private/
9.  sudo cp -v server.crt /etc/ssl/certs/
10. sudo a2enmod ssl
11.  arquivo de configuração do site em /etc/apache2/sites-enabled
     

<IfModule mod_ssl.c>

   <VirtualHost _default_:443>

       #email do administrador aqui

       ServerAdmin webmaster@localhost

       #Diretorio do site aqui

       DocumentRoot /var/www/html

       ErrorLog ${APACHE_LOG_DIR}/error.log

       CustomLog ${APACHE_LOG_DIR}/access.log combined

       SSLEngine on

       #certificados criados

       SSLCertificateFile	/etc/ssl/certs/server.crt

       SSLCertificateKeyFile /etc/ssl/private/server.key

       <FilesMatch "\.(cgi|shtml|phtml|php)$">

           SSLOptions +StdEnvVars

       </FilesMatch>

       <Directory /usr/lib/cgi-bin>

           SSLOptions +StdEnvVars

       </Directory>

   </VirtualHost>

</IfModule>

12. sudo /etc/init.d/apache2 restart